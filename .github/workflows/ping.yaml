name: Check server status

on:
  schedule:
    - cron: '*/15 * * * *'  # Run every 15 minutes
  workflow_dispatch:


jobs:

  update_monitor:

    runs-on: ubuntu-latest

    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Add your job steps here
      - name: Ping the server and log the uptime
        continue-on-error: true
        run: |
          now=$(TZ=US/Eastern date -Iseconds)
          httpCode=$(curl -S -s -o /dev/null -w "%{http_code}" --connect-timeout 10 --max-time 20 https://www.cerc.usgs.gov/orda_docs/)
          statusText=$([[ $httpCode -eq 200 || $httpCode -eq 302 ]] && echo "up" || echo "dn")
          echo "$now | $httpCode | $statusText" >> log.txt
          tail -n 65 log.txt > readlog.txt

      - uses: EndBug/add-and-commit@v9
        id: commit-updated-log
        with:
          message: Add uptime check
          default_author: github_actions
          committer_name: GitHub Actions
          committer_email: actions@github.com

      - name: Check if the status changed
        continue-on-error: true
        run: |
          # If the last two log lines indicate a state change, note it for future notification steps
          tail -n 2 readlog.txt | cut -d '|' -f 3 | xargs sh -c '[[ "$0" != "$1" ]] && echo STATE_CHANGE=$1' >> "$GITHUB_OUTPUT"

      - uses: peter-evans/commit-comment@v3
        if: steps.status-change.outputs.STATE_CHANGE == 'dn'
        with:
          sha: ${{ steps.commit-updated-log.outputs.commit_long_sha }}
          body: |
            The ORDA DARTS server is either down or up.

            [View the uptime monitor](https://doi-os-orda.github.io/uptime/)

            ${{ vars.NOTIFY }}

      - uses: peter-evans/commit-comment@v3
        if: steps.status-change.outputs.STATE_CHANGE == 'up'
        with:
          body: |
            The ORDA DARTS server is up.

            [View the uptime monitor](https://doi-os-orda.github.io/uptime/)

            ${{ vars.NOTIFY }}

